// <auto-generated />
using System;
using FreightBrokerAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FreightBrokerAPI.Migrations
{
    [DbContext(typeof(FreightDbContext))]
    [Migration("20250917160147_InitialSchema")]
    partial class InitialSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("FreightBrokerAPI.Models.Carrier", b =>
                {
                    b.Property<int>("CarrierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MCNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CarrierId");

                    b.ToTable("Carriers");
                });

            modelBuilder.Entity("FreightBrokerAPI.Models.Coverage", b =>
                {
                    b.Property<int>("CoverageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarrierId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CarrierRate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CoveredAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("LoadId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoverageId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("LoadId")
                        .IsUnique();

                    b.ToTable("Coverages");
                });

            modelBuilder.Entity("FreightBrokerAPI.Models.Load", b =>
                {
                    b.Property<int>("LoadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ShipperId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ShipperRate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("LoadId");

                    b.HasIndex("ShipperId");

                    b.ToTable("Loads");
                });

            modelBuilder.Entity("FreightBrokerAPI.Models.Shipper", b =>
                {
                    b.Property<int>("ShipperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ShipperId");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("FreightBrokerAPI.Models.Coverage", b =>
                {
                    b.HasOne("FreightBrokerAPI.Models.Carrier", "Carrier")
                        .WithMany("Coverages")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FreightBrokerAPI.Models.Load", "Load")
                        .WithOne("Coverage")
                        .HasForeignKey("FreightBrokerAPI.Models.Coverage", "LoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");

                    b.Navigation("Load");
                });

            modelBuilder.Entity("FreightBrokerAPI.Models.Load", b =>
                {
                    b.HasOne("FreightBrokerAPI.Models.Shipper", "Shipper")
                        .WithMany("Loads")
                        .HasForeignKey("ShipperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("FreightBrokerAPI.Models.Carrier", b =>
                {
                    b.Navigation("Coverages");
                });

            modelBuilder.Entity("FreightBrokerAPI.Models.Load", b =>
                {
                    b.Navigation("Coverage");
                });

            modelBuilder.Entity("FreightBrokerAPI.Models.Shipper", b =>
                {
                    b.Navigation("Loads");
                });
#pragma warning restore 612, 618
        }
    }
}
